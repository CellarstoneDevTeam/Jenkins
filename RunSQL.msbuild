<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="CompleteBuild"  
  xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
    <!-- Property Group -->
    <PropertyGroup>
        <TPath>C:\Program Files\MSBuildExtensionPack\4.0\MSBuild.ExtensionPack.tasks</TPath>
        <FTPHost>10.199.4.20</FTPHost>
	<FTPUserName>Cellarstone</FTPUserName>
	<FTPPassword>Cellarstone1</FTPPassword>
	<FTPFolder>'D:\FTPDevServer'</FTPFolder> 
    </PropertyGroup>
    <PropertyGroup>
        <SQLDatasource>10.199.4.20</SQLDatasource>
        <SQLUserName>qcadmin</SQLUserName>
	<SQLPassword>QCADMIN</SQLPassword>
	<SQLDB>QCADMIN</SQLDB>
    </PropertyGroup>
    <PropertyGroup>
	    <ApplicationName>bat</ApplicationName>
    </PropertyGroup>
    <ItemGroup>
        <MyOutputFile Include="Items.txt"/>
    </ItemGroup>
    <Import Project="$(MSBuildExtensionsPath)\MSBuildCommunityTasks\MSBuild.Community.Tasks.Targets"/>
    <Import Project="$(TPath)"/>
    <!-- Specify ItemGroup -->
    <ItemGroup>
	<Variable Include="true">
		<name>@FTPPath</name>
		<value>$(FTPFolder)</value>
        </Variable>
	<Variable Include="true">
		<name>@SQLDB</name>
		<value>$(SQLDB)</value>
        </Variable>
    </ItemGroup>
    <ItemGroup>
        <SQLFiles Include="$(MSBuildProjectDirectory)\*.SQL"/>
    </ItemGroup>	
    <!-- Specify Targets -->
    <!-- FTP DBCopy-->
    <Target Name="FTPDBCopy">      
	<Message Text= "Local Directory" />	
	<Message Text= "$(MSBuildProjectDirectory)\qcommission.bak" />	
        <FtpUploadDirectoryContent 
                ServerHost="$(ftpHost)"
                Username="$(FTPUserName)"
                Password="$(FTPPassword)"
                LocalDirectory="$(MSBuildProjectDirectory)\DBBackup"
                RemoteDirectory="/"
                Recursive="true" />
    </Target>
    <!-- Restore DB-->
    <Target Name="RestoreDB" DependsOnTargets="FTPDBCopy">
	    <Message Text="QCOMM DB Restore" />	
	    <Message Text ="$(FTPFolder)" />
	     <Message Text ="$(SQLDataSource)" />
   	   <MSBuild.ExtensionPack.SqlServer.SqlExecute TaskAction="Execute" Files="@(SQLFiles)" ConnectionString="Data Source=$(SQLDataSource);Initial Catalog=;Uid=$(SQLUserName);Pwd=$(SQLPassword)" Parameters="@(Variable)" />	    
    </Target>
    <Target Name="ValidationQuery">
        <MSBuild.ExtensionPack.SqlServer.SqlExecute TaskAction="ExecuteReader" Sql="Select * from sys.tables" ConnectionString="Data Source=$(SQLDataSource);Initial Catalog=$(SQLDB);Uid=$(SQLUserName);Pwd=$(SQLPassword)" Parameters="@(Variable)" > 
            <Output ItemName="RResult" TaskParameter="ReaderResult"/> 
        </MSBuild.ExtensionPack.SqlServer.SqlExecute> 
        <Message Text="%(RResult.Identity) - %(RResult.object_id)"/> 
    </Target>
<Target Name="ReadFromFile">
        <ReadLinesFromFile
            File="@(MyOutputFile)" >
            <Output
                TaskParameter="Lines"
                ItemName="ItemsFromFile"/>
        </ReadLinesFromFile>
  <Message Text="Current line : %(LinesFromFile.Identity)" />
  <Message Text="===================================" />
</Target>


<Target Name="RunApp" AfterTarget="ReadFromFile">
        <Exec Command="$(ApplicationName) > items.txt" />
        <Exec Command="echo it is a test!" />
 </Target>

</Project>
